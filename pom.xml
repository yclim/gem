<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>innohack</groupId>
  <artifactId>gem</artifactId>
  <version>0.1-SNAPSHOT</version>
  <packaging>jar</packaging>

  <parent>
    <groupId>org.springframework.boot</groupId>
    <artifactId>spring-boot-starter-parent</artifactId>
    <version>2.2.5.RELEASE</version>
    <relativePath/> <!-- lookup parent from repository -->
  </parent>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
    <java.version>1.8</java.version>
    <frontend-maven-plugin.version>1.7.6</frontend-maven-plugin.version>
    <node.version>v12.16.1</node.version>
    <yarn.version>v1.22.4</yarn.version>
    <guava.version>28.2-jre</guava.version>
  </properties>

  <dependencies>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-tomcat</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-web</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-devtools</artifactId>
    </dependency>
    <dependency>
      <groupId>com.google.guava</groupId>
      <artifactId>guava</artifactId>
      <version>${guava.version}</version>
    </dependency>

    <dependency>
      <groupId>org.apache.pdfbox</groupId>
      <artifactId>pdfbox</artifactId>
      <version>2.0.19</version>
    </dependency>

    <dependency>
      <groupId>org.apache.poi</groupId>
      <artifactId>poi</artifactId>
      <version>4.1.2</version>
    </dependency>

    <dependency>
      <groupId>org.apache.poi</groupId>
      <artifactId>poi-ooxml</artifactId>
      <version>4.1.2</version>
    </dependency>
    <dependency>
      <groupId>commons-io</groupId>
      <artifactId>commons-io</artifactId>
      <version>2.6</version>
    </dependency>
    <dependency>
      <groupId>org.apache.tika</groupId>
      <artifactId>tika-parsers</artifactId>
      <version>1.24</version>
    </dependency>
    <dependency>
      <groupId>org.apache.tika</groupId>
      <artifactId>tika-core</artifactId>
      <version>1.24</version>
    </dependency>
    <dependency>
      <groupId>com.opencsv</groupId>
      <artifactId>opencsv</artifactId>
      <version>5.0</version>
    </dependency>

    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-databind</artifactId>
    </dependency>

    <dependency>
      <groupId>org.rocksdb</groupId>
      <artifactId>rocksdbjni</artifactId>
      <version>6.5.3</version>
      <classifier>win64</classifier>
    </dependency>

    <dependency>
      <groupId>net.sf.opencsv</groupId>
      <artifactId>opencsv</artifactId>
      <version>2.0</version>
    </dependency>

    <dependency>
      <groupId>org.jsoup</groupId>
      <artifactId>jsoup</artifactId>
      <version>1.13.1</version>
    </dependency>

    <dependency>
      <groupId>org.reflections</groupId>
      <artifactId>reflections</artifactId>
      <version>0.9.12</version>
    </dependency>

    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-test</artifactId>
      <scope>test</scope>
      <exclusions>
        <exclusion>
          <groupId>org.junit.vintage</groupId>
          <artifactId>junit-vintage-engine</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-test</artifactId>
    </dependency>

  </dependencies>

  <build>
    <resources>
      <resource>
        <directory>src/main/resources</directory>
        <filtering>true</filtering>
      </resource>
    </resources>
    <plugins>
      <plugin>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-maven-plugin</artifactId>
      </plugin>
      <plugin>
      	<groupId>org.apache.maven.plugins</groupId>
      	<artifactId>maven-jar-plugin</artifactId>
      	<configuration>
      		<archive>
      			<manifest>
      				<mainClass>innohack.gem.GemApplication</mainClass>
      			</manifest>
      		</archive>
      	</configuration>
      </plugin>
      <plugin>
        <artifactId>maven-resources-plugin</artifactId>
        <executions>
          <execution>
            <id>copy-resources</id>
            <phase>process-classes</phase>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <configuration>
              <outputDirectory>${basedir}/target/classes/static</outputDirectory>
              <resources>
                <resource>
                  <directory>app/dist</directory>
                </resource>
              </resources>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>com.github.eirslett</groupId>
        <artifactId>frontend-maven-plugin</artifactId>
        <version>${frontend-maven-plugin.version}</version>
        <configuration>
          <workingDirectory>app</workingDirectory>
          <!-- by default plugin download from https://nodejs.org/dist/ and https://registry.npmjs.org/npm/-/-->
          <!-- reconfigure here when use offline -->
          <!--nodeDownloadRoot>http://myproxy.example.org/nodejs/</nodeDownloadRoot-->
          <!--npmDownloadRoot>https://myproxy.example.org/npm/</npmDownloadRoot>-->
        </configuration>
        <executions>
          <execution>
            <id>install node</id>
            <goals>
              <goal>install-node-and-yarn</goal>
            </goals>
            <configuration>
              <nodeVersion>${node.version}</nodeVersion>
              <yarnVersion>${yarn.version}</yarnVersion>
            </configuration>
          </execution>
          <execution>
            <id>yarn install</id>
            <goals>
              <goal>yarn</goal>
            </goals>
            <phase>generate-resources</phase>
          </execution>
          <execution>
            <id>yarn test</id>
            <goals>
              <goal>yarn</goal>
            </goals>
            <phase>test</phase>
            <configuration>
              <arguments>test</arguments>
              <environmentVariables>
                <CI>true</CI>
              </environmentVariables>
            </configuration>
          </execution>

          <execution>
            <id>yarn lint</id>
            <goals>
              <goal>yarn</goal>
            </goals>
            <phase>prepare-package</phase>
            <configuration>
              <arguments>lint</arguments>
              <environmentVariables>
                <CI>true</CI>
              </environmentVariables>
            </configuration>
          </execution>

          <execution>
            <id>yarn build</id>
            <goals>
              <goal>yarn</goal>
            </goals>
            <phase>compile</phase>
            <configuration>
              <arguments>build</arguments>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>com.coveo</groupId>
        <artifactId>fmt-maven-plugin</artifactId>
        <version>2.9</version>
        <executions>
          <execution>
            <id>format</id>
            <goals>
              <goal>format</goal>
            </goals>
          </execution>
          <execution>
            <phase>
              prepare-package
            </phase>
            <goals>
              <goal>check</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>

  <profiles>
    <profile>
      <id>dev</id>
      <activation>
        <activeByDefault>true</activeByDefault>
      </activation>
      <properties>
        <spring.profiles.active>dev</spring.profiles.active>
      </properties>
    </profile>
    <profile>
      <id>prod</id>
      <build>
        <plugins>
          <plugin>
            <groupId>com.github.eirslett</groupId>
            <artifactId>frontend-maven-plugin</artifactId>
            <version>${frontend-maven-plugin.version}</version>
            <configuration>
              <workingDirectory>app</workingDirectory>
              <!-- by default plugin download from https://nodejs.org/dist/ and https://registry.npmjs.org/npm/-/-->
              <!-- reconfigure here when use offline -->
              <!--nodeDownloadRoot>http://myproxy.example.org/nodejs/</nodeDownloadRoot-->
              <!--npmDownloadRoot>https://myproxy.example.org/npm/</npmDownloadRoot>-->
            </configuration>
            <executions>
              <execution>
                <id>install node</id>
                <goals>
                  <goal>install-node-and-yarn</goal>
                </goals>
                <configuration>
                  <nodeVersion>${node.version}</nodeVersion>
                  <yarnVersion>${yarn.version}</yarnVersion>
                </configuration>
              </execution>
              <execution>
                <id>yarn install</id>
                <goals>
                  <goal>yarn</goal>
                </goals>
                <phase>generate-resources</phase>
              </execution>
              <execution>
                <id>yarn test</id>
                <goals>
                  <goal>yarn</goal>
                </goals>
                <phase>test</phase>
                <configuration>
                  <arguments>test</arguments>
                  <environmentVariables>
                    <CI>true</CI>
                  </environmentVariables>
                </configuration>
              </execution>
              <execution>
                <id>yarn build</id>
                <goals>
                  <goal>yarn</goal>
                </goals>
                <phase>compile</phase>
                <configuration>
                  <arguments>build</arguments>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
      <properties>
        <spring.profiles.active>prod</spring.profiles.active>
      </properties>
    </profile>
    <profile>
    	<id>cd</id>
    	<activation>
        <activeByDefault>false</activeByDefault>
      </activation>
    	<build>
    		<plugins>
    			<plugin>
		        <groupId>com.google.cloud.tools</groupId>
		        <artifactId>jib-maven-plugin</artifactId>
		        <version>2.2.0</version>
		        <configuration>
		          <to>
		            <!-- image>gem</image-->
		            <image>037562003025.dkr.ecr.ap-southeast-1.amazonaws.com/docker-repo:gem</image>
		            <auth>
		            	<username>AWS</username>
		            	<password>eyJwYXlsb2FkIjoiUDE3VGtSUk9WMjJZbFpUQnErWmNzWTZwQ3lIcGY3YUhWQ3JlUWpic2NmVit1RTlSYXJZZkpNNmZpc0ViOHk0QUF3M2FJSTB0dGdKWTlrbUdhQnpnL3NQMXBvaFR6OUhSaEZ2LzhqY2g3TE5Ca1V4eVhVdmlvYTRySUxsMDNsVXF4L1dOeE5BKzh3dFdFVmVoTEJUWlY0TkY5RlFESm5uaDFtakl0QkNGYjJrZU52bHZDbVlXZWZXanZ4WmNSTkZURm9JalFxWXB3UlRscE80alFWcG9ybnUvOHdWKzd1dWtPcHAzN1V5Lzd5OTJTcU5pMlAxQ2NsWG5paEovQlNkblpHRXkrak5yeW9Yc2tBZC9WVUp3SlM5RlhJam02ajNidGhpdW1oQWkrcHcwdEwwOTNGOVFGeEE5eWNpSzY1TDVUN3I5ZktXQTJ2ZGx1dktBb21FZ1k1K3N6NFJraVVNSUJjeStLZHFGWE9CRHVjR3RNZlYrVXR5c0EyUWFrb2tVdXhDanl0ZUlDc0UvRmF6RHM1a1ltMkZ5VVhyZmlnbVlKLy9WbHozdTdUMCtJeVlqbGRCblNUcDJUTjhKa0srVTVZQ1BNZlFhVm92aVEzV3RnVVkycU40R1JHeXJwM2xRYTZxZm50R2RXeDM4Ym4yeGZtUVVVSnVLVzVIOGxxNEFIUXJwSUJHeUdYMkZOK0lLVzUxYkgxZzVsazNMUXZGdkp6S081K2JVQWN6TW1iK2NMcWpYUnN3Vm9rb29iaEMydVhGUm0wejBsM2tLeEhVNC83Y3VCMWpqdUx3WGI0SXV0WDE5dTltS1M3c2JjWVhzVTlpRDREc1pWVnorWkEzZ1E1RWlNSFljUWdoU3h0OU1KU1ZsQkJFUlIrZzZBT3Rnb2s4ZzFvZ2laekR0UFEzRzByTVNxOWRwa2tidEU2L3h2WDZrS09qZ0RpZnRwM2IvMXJjTUlpVmU1blVJY2RhQkxrcEo4OGtCLzRib1VaeDJWOXBLZzdCUEMxQ3Fvcm50S1YyU25CRWJSZTFJR29yTUJqOSs0ZFM3am5mMVdOV2lYSnU4alJ2MkJldFhFemVSM05CbTk1OWlyb0ZIUmVlOEcyY2JYMllZRFlCOVpGRk9NL0RsZGRINm5mTzdhWTZrcWJYcWVvWEV6Y2RjTFU1SCtkY1JxUWNQU2Y3aThuT3lUelpnaVBIcWRSWjgrOTFxSzZZNURqZFRVRnh2UjhsYkVMYXNzZ2NxRVd2Wk93Vlc1ZjA1MEppVmJhdnNIZTZCNk01MEs2L0tJQzF1TENkZG5YTFNKUTNTeHN4N0tmamNVYUZqQnBIVS9VbWhzbFp1TCtvWVhjZER6bDZyTVp6MVFDcGVKTEFETEV4VFRKcFB6Y3c1TWl4bEliL0J5SXJ1YVpuWFIrbHFaNW5KbU80TzB4RTV0TVB3Tm40clFtWTdKc0ZwbE9KeUw5amc2dmdpcGxqaGowdWt4R2NFMGxWNEU0TndGQ0pyZnJFNGN5RWlNQjBJWlo3ZnI0azB0OFl4WVVsOHErWWRZUFcxZEkzWUdiRnl3N1E4WWc4ZUZydGRObnRhdHN1RDJmeTdnTk5IUHRPaHlvZWFIL25EeFhXdE9idG1GL1NDWXh5M0UvMzd3ZnRyY1gvNnV3ZlZZUXg1MTJYMEc3cElwaXJvUWNqeXZDZGxjVlBKZGlhNjFZR2JDZlNRUWNEblFpQlFmS1g1Zyt0Sm5XK1daNW5EN3FyUHV1MW5ZN3R1YmkrUGZqMXpFR1c2eTBxNW9EN0k0OExjTkQ4TTAwaG4xdExqV29XZHJ6aEpIZFpNUE9kQVNyTG1jTnJ5SEpOLzhNWllCWFk4T0FQM1ZTM3ltaG5RUkpRckwzK1JHVXphNmgwYlcycDVIeWhDbEFzVXgzaWY3SWNGK0krVmNJVGZncmJVdDFUa25LaHc2ZEpWRlVBL09meS9RTlhpTHFiU1ZkOVpyOVZVZjZFY29uNHoxQVcrdUhvejhiOUFlNDlGTUVoOUFhbmpRSTQ5UGQ5NzlzVlFOSkZvdHgza3AwdkQ1WU9oa1BQNkxtdWNNbW9ZVGdNcHRtWSt4bXJ6Z05CeHJjVHZCWXBZbGx4NExqNURVcXFPZ3R3PSIsImRhdGFrZXkiOiJBUUVCQUhpZEVyWkNmaEtPZURNMDgrY1A1ZnR5anZROVhNTVNRNHBLMEZabnZBWlhKZ0FBQUg0d2ZBWUpLb1pJaHZjTkFRY0dvRzh3YlFJQkFEQm9CZ2txaGtpRzl3MEJCd0V3SGdZSllJWklBV1VEQkFFdU1CRUVEQ1lQWUI0K0dQV0VobHovQ1FJQkVJQTcrVzlkVmtBR3FXTFhFWTh3M01HOE5SUlVLWUNZbUVUNmRFeGhmUkpIK3hJM25FK3BRSjgvYzkrR3dXN092NjZGTWRyT055WFB5MndoSk1VPSIsInZlcnNpb24iOiIyIiwidHlwZSI6IkRBVEFfS0VZIiwiZXhwaXJhdGlvbiI6MTU4NzczOTMyOH0=</password>
		            </auth>
		          </to>
		        </configuration>
		        <executions>
		        	<execution>
                <id>dockerize</id>
                <phase>package</phase>
                <goals>
                  <!-- goal>buildTar</goal-->
                  <goal>build</goal>
                </goals>
              </execution>
		        </executions>
		      </plugin>
    		</plugins>
    	</build>
    </profile>

  </profiles>

</project>